import{r as t,h as s,g as i}from"./p-8c82131c.js";import{m as e}from"./p-9a71ebc7.js";import{r as h}from"./p-a5f3811d.js";let r=class{constructor(s){t(this,s),this.timeValues=[],this.format="hh:mm A",this.disabled=!1,this.isMeridianFormat="hh:mm A"===this.format,this.name="",this.interval=30,this.minTime=this.isMeridianFormat?"12:00 AM":"00:00",this.maxTime=this.isMeridianFormat?"11:30 PM":"23:30",this.isDefaultEndTime=["11:30 PM","23:30"].includes(this.maxTime),this.getTimeOptionsMeta=t=>{const s=this.format;return{interval:this.interval,startTime:e(this.minTime,s).format(t),endTime:e(this.maxTime,s).format(t)}},this.setTimeValues=()=>{const t="HH:mm",{interval:s,startTime:i,endTime:h}=this.getTimeOptionsMeta(t);let r=e(i,t).valueOf();const m=e(h,t).valueOf();for(;r<=m;)this.timeValues.push({meridianFormat:e(r).format("hh:mm A"),nonMeridianFormat:e(r).format(t)}),r=e(r).add(s,"minutes").valueOf()}}currentTimeLabel(t){return this.isMeridianFormat?t.meridianFormat:t.nonMeridianFormat}currentTimeValue(t){return t.nonMeridianFormat}setTimeValue(t){const{value:s}=t.detail;this.value=s}setEndTime(){this.isDefaultEndTime&&(this.maxTime=this.isMeridianFormat?"11:59 PM":"23:59")}componentWillLoad(){30!==this.interval&&this.setEndTime(),this.setTimeValues()}render(){const{host:t,name:i,value:e}=this;return h(t,i,e),s("fw-select",{disabled:this.disabled,value:this.value,onFwChange:t=>this.setTimeValue(t)},this.timeValues.map((t=>s("fw-select-option",{value:this.currentTimeValue(t)},this.currentTimeLabel(t)))))}get host(){return i(this)}};export{r as fw_timepicker}