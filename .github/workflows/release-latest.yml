name: release-latest

on:
  workflow_dispatch:
    inputs:
      password:
        description: password to run workflow for latest release
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.password  != ''}}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Update package source list
        run: sudo apt-get update

      - name: Install libs
        run: sudo apt-get install -y libnss3-dev gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget libgbm1

      - name: Install npm 7
        run: npm i -g npm@7

        # Fetch git tags
      - name: Fetch git tags
        run: git fetch --all

      # Pull the latest from the branch
      - name: Git checkout latest from master
        run: git pull origin master

      # Installs the dependencies
      - name: Install Dependencies
        run: npm ci

      # Runs lints
      - name: Run Linter
        run: npm run code-sanity

      # Build
      - name: Build
        run: npm run build

      # Runs tests
      - name: Runs tests
        run: npm run test:ci

      # Git Config
      - name: Set Git Config
        run: git config --global user.email "runway-frontend-coe@freshworks.com" && git config --global user.name "runway-frontend-coe"

      # Create Git Tag latest
      - name: Git tag latest
        if: github.ref == 'refs/heads/master'
        run: npm run update-latest:ci
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CROWDIN_PROJECT_ID: ${{secrets.CROWDIN_PROJECT_ID}}
          CROWDIN_TOKEN: ${{secrets.CROWDIN_TOKEN}}

      # Write token to npmrc
      - name: Update npmrc
        run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish Latest to npm registry
      - name: Release Latest
        if: github.ref == 'refs/heads/master'
        run: npm run release-latest:ci
